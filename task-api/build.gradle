plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

def springdoc_openapi_version = parent.property('springdoc-openapi.version')
def mapstruct_version = parent.property('mapstruct.version')

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
  implementation 'org.springframework.boot:spring-boot-starter-activemq'
	implementation 'org.springframework.boot:spring-boot-devtools'

	implementation "org.springdoc:springdoc-openapi-ui:${springdoc_openapi_version}"
	implementation "org.springdoc:springdoc-openapi-data-rest:${springdoc_openapi_version}"

	implementation 'org.messaginghub:pooled-jms'

	implementation "org.mapstruct:mapstruct:${mapstruct_version}"
  annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"
  
  implementation project(':task-message')

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
}

springBoot {
    mainClassName = "it.francescofiora.tasks.taskapi.Application"
}

eclipse {
  sourceSets {
     main {
         java {
             srcDirs += ["build/generated/sources/annotationProcessor/java/main"]
         }
     }
  }
}

test {
  useJUnitPlatform()
}

task cleanResources(type: Delete) {
    delete "build/resources"
}

bootBuildImage {
	imageName = "francescofiora.it/library/${project.name}:${project.version}"
}

